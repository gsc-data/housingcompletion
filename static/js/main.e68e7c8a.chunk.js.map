{"version":3,"sources":["logo.svg","jenks.js","Map.js","Legend.js","Slider.js","useFetch.js","barChart.js","rightBar.js","App.js","reducers/reducer.js","index.js"],"names":["jenks","data","n_classes","length","lower_class_limits","k","kclass","countNum","breaks","slice","sort","a","b","i","j","variance_combinations","variance","tmp1","tmp2","push","Infinity","l","sum","sum_squares","w","i4","m","lower_class_limit","val","getMatrices","setDefaultCredentials","apiVersion","API_VERSIONS","V2","username","apiKey","INITIAL_VIEW_STATE","latitude","longitude","zoom","pitch","bearing","LinearInterpolator","POLYGON_COLORS","reverse","color","scaleThreshold","range","MyMap","start","end","useState","mapData","setMapData","domain","useSelector","state","yearRange","dispatch","useDispatch","viewState","updateViewState","query","useEffect","axios","get","encodeURIComponent","response","features","value","map","feature","properties","dw","type","console","log","getData","housingLayer","ColumnLayer","id","pickable","autoHighlight","extruded","radius","elevationScale","getPosition","f","geometry","coordinates","getElevation","getFillColor","getLineColor","districtLayer","CartoLayer","MAP_TYPES","QUERY","lineWidthMinPixels","width","height","controller","layers","onViewStateChange","v","getTooltip","object","reuseMaps","mapStyle","BASEMAP","DARK_MATTER","mapboxApiAccessToken","preventStyleDiffing","Legend","style","display","flexDirection","c","flex","background","join","textAlign","fontSize","useStyles","makeStyles","theme","root","spacing","margin","DistanceSlider","withStyles","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","classes","sliderValues","handler","useCallback","debounce","e","className","valueLabelDisplay","aria-label","defaultValue","min","max","onChange","useFetch","status","setStatus","setData","fetch","json","rows","district","fetchData","Chart","register","ChartDataLabels","defaults","options","indexAxis","maintainAspectRatio","elements","bar","borderWidth","responsive","scales","x","ticks","callback","index","values","yAxes","font","weight","tick","label","plugins","datalabels","formatter","context","Math","round","anchor","align","size","dataset","split","elm","parseInt","r","g","legend","BarChart","chartData","labels","datasets","borderColor","zeroPad","num","places","String","padStart","RightBar","fontFamily","marginBottom","lineHeight","href","App","initialState","store","createStore","currentState","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e68e7c8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n\r\nfunction jenks(data, n_classes) {\r\n\r\n    // Compute the matrices required for Jenks breaks. These matrices\r\n    // can be used for any classing of data with `classes <= n_classes`\r\n    function getMatrices(data, n_classes) {\r\n\r\n        // in the original implementation, these matrices are referred to\r\n        // as `LC` and `OP`\r\n        //\r\n        // * lower_class_limits (LC): optimal lower class limits\r\n        // * variance_combinations (OP): optimal variance combinations for all classes\r\n        var lower_class_limits = [],\r\n            variance_combinations = [],\r\n            // loop counters\r\n            i, j,\r\n            // the variance, as computed at each step in the calculation\r\n            variance = 0;\r\n\r\n        // Initialize and fill each matrix with zeroes\r\n        for (i = 0; i < data.length + 1; i++) {\r\n            var tmp1 = [], tmp2 = [];\r\n            for (j = 0; j < n_classes + 1; j++) {\r\n                tmp1.push(0);\r\n                tmp2.push(0);\r\n            }\r\n            lower_class_limits.push(tmp1);\r\n            variance_combinations.push(tmp2);\r\n        }\r\n\r\n        for (i = 1; i < n_classes + 1; i++) {\r\n            lower_class_limits[1][i] = 1;\r\n            variance_combinations[1][i] = 0;\r\n            // in the original implementation, 9999999 is used but\r\n            // since Javascript has `Infinity`, we use that.\r\n            for (j = 2; j < data.length + 1; j++) {\r\n                variance_combinations[j][i] = Infinity;\r\n            }\r\n        }\r\n\r\n        for (var l = 2; l < data.length + 1; l++) {\r\n\r\n            // `SZ` originally. this is the sum of the values seen thus\r\n            // far when calculating variance.\r\n            var sum = 0,\r\n                // `ZSQ` originally. the sum of squares of values seen\r\n                // thus far\r\n                sum_squares = 0,\r\n                // `WT` originally. This is the number of\r\n                w = 0,\r\n                // `IV` originally\r\n                i4 = 0;\r\n\r\n            // in several instances, you could say `Math.pow(x, 2)`\r\n            // instead of `x * x`, but this is slower in some browsers\r\n            // introduces an unnecessary concept.\r\n            for (var m = 1; m < l + 1; m++) {\r\n\r\n                // `III` originally\r\n                var lower_class_limit = l - m + 1,\r\n                    val = data[lower_class_limit - 1];\r\n\r\n                // here we're estimating variance for each potential classing\r\n                // of the data, for each potential number of classes. `w`\r\n                // is the number of data points considered so far.\r\n                w++;\r\n\r\n                // increase the current sum and sum-of-squares\r\n                sum += val;\r\n                sum_squares += val * val;\r\n\r\n                // the variance at this point in the sequence is the difference\r\n                // between the sum of squares and the total x 2, over the number\r\n                // of samples.\r\n                variance = sum_squares - (sum * sum) / w;\r\n\r\n                i4 = lower_class_limit - 1;\r\n\r\n                if (i4 !== 0) {\r\n                    for (j = 2; j < n_classes + 1; j++) {\r\n                        // if adding this element to an existing class\r\n                        // will increase its variance beyond the limit, break\r\n                        // the class at this point, setting the lower_class_limit\r\n                        // at this point.\r\n                        if (variance_combinations[l][j] >=\r\n                            (variance + variance_combinations[i4][j - 1])) {\r\n                            lower_class_limits[l][j] = lower_class_limit;\r\n                            variance_combinations[l][j] = variance +\r\n                                variance_combinations[i4][j - 1];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            lower_class_limits[l][1] = 1;\r\n            variance_combinations[l][1] = variance;\r\n        }\r\n\r\n        // return the two matrices. for just providing breaks, only\r\n        // `lower_class_limits` is needed, but variances can be useful to\r\n        // evaluage goodness of fit.\r\n        return {\r\n            lower_class_limits: lower_class_limits,\r\n            variance_combinations: variance_combinations\r\n        };\r\n    }\r\n\r\n\r\n\r\n    // the second part of the jenks recipe: take the calculated matrices\r\n    // and derive an array of n breaks.\r\n    function breaks(data, lower_class_limits, n_classes) {\r\n\r\n        var k = data.length - 1,\r\n            kclass = [],\r\n            countNum = n_classes;\r\n\r\n        // the calculation of classes will never include the upper and\r\n        // lower bounds, so we need to explicitly set them\r\n        kclass[n_classes] = data[data.length - 1];\r\n        kclass[0] = data[0];\r\n\r\n        // the lower_class_limits matrix is used as indexes into itself\r\n        // here: the `k` variable is reused in each iteration.\r\n        while (countNum > 1) {\r\n            kclass[countNum - 1] = data[lower_class_limits[k][countNum] - 2];\r\n            k = lower_class_limits[k][countNum] - 1;\r\n            countNum--;\r\n        }\r\n\r\n        return kclass;\r\n    }\r\n\r\n    if (n_classes > data.length) return null;\r\n\r\n    // sort data in numerical order, since this is expected\r\n    // by the matrices function\r\n    data = data.slice().sort(function (a, b) { return a - b; });\r\n\r\n    // get our basic matrices\r\n    var matrices = getMatrices(data, n_classes),\r\n        // we only need lower class limits here\r\n        lower_class_limits = matrices.lower_class_limits;\r\n\r\n    // extract n_classes out of the computed matrices\r\n    return breaks(data, lower_class_limits, n_classes);\r\n\r\n}\r\n\r\n\r\nexport default jenks;","import React, { useState, useEffect,useCallback } from 'react'\r\nimport jenks from './jenks';\r\nimport { CartoLayer, CartoSQLLayer, MAP_TYPES, setDefaultCredentials, BASEMAP ,API_VERSIONS} from '@deck.gl/carto';\r\nimport axios from 'axios';\r\nimport { scaleThreshold } from 'd3-scale';\r\nimport {render} from 'react-dom';\r\nimport {StaticMap} from 'react-map-gl';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {WebMercatorViewport,LinearInterpolator} from '@deck.gl/core';\r\nimport {HexagonLayer} from '@deck.gl/aggregation-layers';\r\nimport {ColumnLayer} from '@deck.gl/layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nsetDefaultCredentials({\r\n  apiVersion: API_VERSIONS.V2,\r\n  username: 'gsc-admin',\r\n  apiKey: 'default_public'\r\n});\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n    latitude: -33.842104,\r\n    longitude: 150.998914,\r\n    zoom:10,\r\n    pitch: 60,\r\n    bearing: 0\r\n  };\r\n\r\nconst credentials = {\r\n  username: 'gsc-admin',\r\n  apiKey: 'default_public'//'fFbU97TNhKdhIO4yYyFjdA'\r\n  }\r\nsetDefaultCredentials(credentials);\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\r\n\r\nconst transitionInterpolator = new LinearInterpolator();\r\n\r\n\r\nexport const POLYGON_COLORS = [\r\n  [225, 83, 131],\r\n  [225, 83, 131],\r\n  [241, 109, 122],\r\n  [250, 138, 118],\r\n  [255, 166, 121],\r\n  [255, 194, 133],\r\n  [255, 221, 154],\r\n  [254, 246, 181],\r\n  \r\n].reverse()\r\n\r\nconst color = scaleThreshold()\r\n  .range(POLYGON_COLORS)\r\nconst mapStyle = 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json'\r\nconst MyMap = ({start,end}) => {\r\n\r\n  const [mapData, setMapData] = useState([]);\r\n  //const [domain,setDomain]= useState([])\r\n\r\n  const yearRange = useSelector(state => state.yearRange);\r\n  const domain = useSelector(state => state.domain);\r\n  \r\n  const dispatch = useDispatch();\r\n  const updateDomain = (value) => {\r\n    //console.log(value);\r\n    return dispatch(\r\n        {\r\n            type: 'set_domain',\r\n            domain: value,\r\n            \r\n        }\r\n    )\r\n};\r\n\r\n  const [viewState, updateViewState] = useState(INITIAL_VIEW_STATE);\r\n\r\n  const query = `\r\n  select m.the_geom, m.mb_code16,sum(m.netcomplet) as dw  from housingcompletionsmbpoint as m \r\n  where m.time between ${start} and ${end} group by m.the_geom, m.mb_code16\r\n  `\r\n\r\n  //console.log(domain);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n\r\n\r\n      const response = await axios.get(`https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}&format=geojson`);\r\n      setMapData(response.data.features);\r\n      //setDomain(jenks(response.data.features.map(feature => feature.properties.dw), POLYGON_COLORS.length-1))\r\n      updateDomain(jenks(response.data.features.map(feature => feature.properties.dw), POLYGON_COLORS.length-2))\r\n      //console.log(response);\r\n      //updateDomain(domain)\r\n      console.log('hello');\r\n\r\n      return response;\r\n\r\n    }\r\n    getData();\r\n\r\n  }, [query])\r\n\r\n  // const rotateCamera = useCallback(() => {\r\n  //   updateViewState(v => ({\r\n  //     ...v,\r\n  //     bearing: v.bearing +0.5,\r\n  //     transitionDuration: 0,\r\n  //     transitionInterpolator,\r\n  //     onTransitionEnd: rotateCamera\r\n  //   }));\r\n  // }, []);\r\n \r\n  color.domain(domain);\r\n  //console.log(domain);\r\n\r\n  const housingLayer =new ColumnLayer({\r\n    id: 'hexagon-layer',\r\n    data: mapData,\r\n    pickable: true,\r\n    autoHighlight: true,\r\n    extruded: true,\r\n    radius: 100,\r\n    elevationScale: 5,\r\n    getPosition: f => f.geometry.coordinates,\r\n    //getElevation:  f => f.properties.index\r\n    getElevation:f=>f.properties.dw ?f.properties.dw:0,\r\n    getFillColor:f => color(f.properties.dw),\r\n    getLineColor:f => color(f.properties.dw),\r\n  \r\n\r\n   \r\n  })\r\n\r\n  const districtLayer = new CartoLayer({\r\n    id:'district',\r\n    type: MAP_TYPES.QUERY,\r\n    data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\r\n  \r\n    getFillColor: [0,0,0,0],\r\n    getLineColor: [211,211,211],\r\n    lineWidthMinPixels: 1,\r\n    pickable: false,\r\n    \r\n  })\r\n\r\n  //console.log(color.domain())\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <DeckGL\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        controller={true}\r\n        viewState={viewState}\r\n        layers={[housingLayer,districtLayer]}\r\n        // getTooltip={getTooltip}\r\n        //onLoad={rotateCamera}\r\n        onViewStateChange={v => updateViewState(v.viewState)}\r\n        getTooltip={ ({ object }) => object && `dwelling: ${object.properties.dw}`}\r\n       \r\n      >\r\n        <StaticMap\r\n          reuseMaps\r\n          mapStyle= {BASEMAP.DARK_MATTER}//\"mapbox://styles/mapbox/dark-v9\"\r\n          mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\r\n          preventStyleDiffing\r\n        />\r\n      </DeckGL>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n};\r\n\r\nexport default MyMap;","import React, { useEffect, useState } from 'react';\r\nimport {POLYGON_COLORS} from './Map'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst Legend = () => {\r\n\r\n    const domain = useSelector(state => state.domain)\r\n    console.log(domain);\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: '8px', width: '100%', display: 'flex', flexDirection: 'row'}}>\r\n\r\n\r\n                { POLYGON_COLORS.slice(0,7).map(c=>{\r\n                    return <div style={{flex: '0 0 14.28%', background: `rgb(${c.join()})`}}></div>\r\n                })}\r\n\r\n\r\n                \r\n            </div>\r\n\r\n            <div style={{width: '100%', display: 'flex', flexDirection: 'row'}}>\r\n                {domain.length && domain.map(v=>{\r\n                    return <div style={{width: '14.28%',textAlign:'left',fontSize:'12px'}}>{v}</div>\r\n                })}\r\n        \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Legend;","import React, {useCallback} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { debounce } from 'lodash';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 280 + theme.spacing(3) * 2,\n   \n   \n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\n\n\nconst DistanceSlider = withStyles({\n  root: {\n    color: '#ff9999',\n    height: 8,\n    \n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\n\n\nexport default function CustomizedSlider() {\n  const classes = useStyles();\n  const sliderValues = useSelector(state => state.yearRange);\n  const dispatch = useDispatch();\n  const updateYearRange = (e, val) => {\n    //console.log(val);\n     \n      return dispatch(\n          {\n              type: 'set_year',\n              yearRange: val//e.target.value\n          }\n      )\n  };\n\n  const handler = useCallback(debounce(updateYearRange,2000),[])\n\n  return (\n  \n    <div className={classes.root}>\n      \n      \n      \n      <DistanceSlider valueLabelDisplay=\"auto\" aria-label=\"distance slider\" \n      defaultValue={sliderValues} min ={2000} max= {2020}   onChange={(e,val) => handler(e,val)}/>\n      \n     \n      \n\n      \n    </div>\n   \n  );\n}\n","import react, {useState,useEffect} from 'react';\n\n\nconst useFetch = (query) => {\n    const [status, setStatus] = useState('idle');\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        if (!query) return;\n\n        const fetchData = async () => {\n            setStatus('fetching');\n            const response = await fetch(\n                `https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}`\n            );\n            const data = await response.json();\n            setData(data.rows.sort((a,b)=>a.district>b.district?1:-1));\n            setStatus('fetched');\n        };\n\n        fetchData();\n    }, [query]);\n\n    return { status, data};\n};\n\nexport default useFetch;\n\n\n","\nimport React  from 'react';\nimport { Bar,Chart } from \"react-chartjs-2\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport useFetch from './useFetch';\n//import { useSelector} from 'react-redux';\n\n//git remote add origin https://github.com/gsc-data/university-pt-access.git\n\n\nChart.register(ChartDataLabels)\nChart.defaults.color = \"#FFFFFF\"\nconst options = {\n        \n  indexAxis: 'y',\n  maintainAspectRatio: false,\n\n  \n\n  elements: {\n    bar: {\n      borderWidth: 1,\n    }\n  },\n  responsive: true,\n  \n  scales: {\n    x: {\n        ticks: {\n            // Include a dollar sign in the ticks\n            callback: function(value, index, values) {\n                return   value/1000 +'k';\n            }\n        }\n    },\n    yAxes: {\n      ticks: {\n          // Include a dollar sign in the ticks\n          // callback: function(value, index, values) {\n          //     return `<b>${this.getLabelForValue(value)}</b>`;\n          // },\n          font: {\n           \n    \n            weight:  function(value){\n              const {tick} = value;\n              //console.log(tick);\n              return tick.label==='Greater Sydney'?\"bold\":\"normal\";\n            }\n     \n          },\n      }\n  }\n}\n\n  ,\n  plugins: {\n    datalabels:{\n      formatter: function(value, context) {\n        return  Math.round(value/1000,0) +'k';\n      },\n      anchor:'end',\n      align :'start',\n      font: {\n        size: '12px',\n        weight:'bold'\n      },\n      color: function(context){\n        const backgroundColor = context.dataset.backgroundColor\n        const [r,g,b] = backgroundColor.slice(5,backgroundColor.length-5).split(',').map(elm=>parseInt(elm))\n        const factor =.5;\n        //console.log(r);\n  \n        const newColor= `rgb(${Math.round(r*factor,0)},${Math.round(g*factor,0)},${Math.round(b*factor,0)})`;\n        //console.log(newColor);\n        return 'rgba(255,255,255)'\n      }\n    },\n\n    legend:{\n      display:false\n\n  },\n\n  }\n  \n\n};\n\n\n\n\n\nconst BarChart = ({start, end}) => {\n\n  //const [start,end]  = useSelector( state=>state.yearRange);\n\n  const query = `\n  select t.district, sum(t.netcomplet) dw from  (SELECT a.mb_code16,a.netcomplet,a.time,b.district FROM \"gsc-admin\".housingcompletionsmbpoint a inner join  \"gsc-admin\".\"mb_lga_int\" b on a.mb_code16=b.mb_code16 where a.time between ${start} and ${end}) t group by t.district\n  `\n  const {status, data} = useFetch(query);\n\n  const chartData = {\n    labels : data.map((elm)=> elm.district),\n    datasets: [\n        {\n            label :'',\n            data:data.map((elm)=> elm.dw),\n            backgroundColor: \"rgba(255, 145, 164,200)\",\n          \n            borderColor: \"rgba(255, 145, 164,255)\",\n            borderWidth: 1\n\n        }\n    ]\n};\n\n\n    \n    return ( \n        <div style = {{height:'400px'}}>\n        <Bar data = {chartData} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Legend from './Legend';\nimport './RightBar.css';\nimport CustomizedSlider from './Slider';\nimport BarChart from './barChart';\n\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\n\nconst RightBar = () => {\n\n\n    const [start,end] = useSelector(state => state.yearRange);\n    \n    const dispatch = useDispatch();\n    const updateYearRange = (e) => {\n        return dispatch(\n            {\n                type: 'set_year',\n                yearRange: e.target.value,\n                \n            }\n        )\n    };\n\n    return (\n        <div className='layer-selector' style= {{fontFamily:\"Roboto, sans-serif\", textAlign:\n    'left'}}>\n\n<b>  Dwelling completion between FY {start}-{zeroPad(parseInt(String(start).slice(-2))+1,2)} and {end}-{zeroPad(parseInt(String(end).slice(-2))+1,2)}</b>\n            \n            <CustomizedSlider />\n            <h4 style= {{textAlign:'left',margin:'0px 0px 3px 0px'}}>LEGEND</h4>\n            <Legend />\n\n            <div style ={{marginTop:'10px',marginBottom:'10px', fontSize:'small'}}>\n            <b>Total dwelling completion by distict</b>\n            </div>\n           \n\n            <BarChart start ={start} end = {end} />\n\n            <div>\n                <span style ={{fontSize:'8px', textAlign:'left'}}>Source: GSC Analysis 2021,DPIE</span>\n            </div>\n            <span style={{fontSize:\"10px\",lineHeight:'1.1em', textAlign:'left'}}>\n                Please contact <a href = \"mailto: data@gsc.nsw.gov.au\">data@gsc.nsw.gov.au</a> for more info\n                </span>\n           \n        \n           \n\n        \n\n           \n        \n           \n\n        \n           \n\n\n            \n           \n        \n           \n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import logo from './logo.svg';\nimport './App.css';\nimport MyMap from './Map';\nimport RightBar  from './rightBar';\n\n\nimport { useSelector} from 'react-redux';\n\nfunction App() {\n\n  const [start,end]  = useSelector( state=>state.yearRange);\n  \n  return (\n    <div className=\"App\">\n\n\n      <MyMap start ={start} end = {end}/>\n      <RightBar />\n\n  \n    </div>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    yearRange:[2011,2020],\r\n    domain:[\r\n        1,\r\n        45,\r\n        171,\r\n        401,\r\n        821,\r\n        1565,\r\n        3468\r\n    ]\r\n    \r\n}\r\n\r\n\r\nexport default function reducer(currentState= initialState, action ){\r\n\r\n    switch(action.type){\r\n        case 'set_year':\r\n            return {\r\n                ...currentState,\r\n                yearRange :action.yearRange\r\n            };\r\n            case 'set_domain':\r\n                return {\r\n                    ...currentState,\r\n                    domain :action.domain\r\n                };\r\n            \r\n        \r\n        default:\r\n            return currentState\r\n    }\r\n\r\n    \r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\n\nimport {createStore,combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/reducer';\n\n\n\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}